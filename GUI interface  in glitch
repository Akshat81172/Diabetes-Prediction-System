--------------------------------------------> FRAMEWORK USING FLASK  IN GlITCH---------------------->

GLITCH LINK -https://diabetespredictor.glitch.me/




STEP1)   Make the template folder than inside the index.html folder
-----------------------------------------------------------------------------
code------------------------ <!DOCTYPE html>
<html lang="en">
   <body style="font-family: Arial, sans-serif; background-color: #f0f8ff; display: flex; justify-content: center; align-items: center; flex-direction: column; height: 100vh; margin: 0; background-image: url('https://cdn.glitch.global/ad8d18c2-653a-4e31-b0f8-b301c6e77024/9690530-new-type-2-diabetes-drug-to-regulate.jpg?v=1720688729209'); background-size: cover; background-position: center; background repeat: no-repeat";>
      <h1 style="color: yellow; text-align: center; margin-bottom: 20px;">
         Diabetes Prediction System 
      </h1>
      <form method="POST" action="/dpredict">
         <table style="border-collapse: collapse; width: 50%; margin: auto; background-color: #fff; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);">
            <tr>
               <td style="border: 1px solid #ddd; padding: 10px; text-align: left;">Gender (1-Male, 2-Female, 3-Other)</td>
               <td style="border: 1px solid #ddd; padding: 10px; background-color: #f9f9f9;">
                  <input type="text" name="gender" style="width: 100%; padding: 8px; box-sizing: border-box;">
               </td>
            </tr>
            <tr>                                                                                                                                                                                                                                                                                                                 
               <td style="border: 1px solid #ddd; padding: 10px; text-align: left;">Age (1-80)</td>
               <td style="border: 1px solid #ddd; padding: 10px; background-color: #f9f9f9;">
                  <input type="text" name="age" style="width: 100%; padding: 8px; box-sizing: border-box;">
               </td>
            </tr>
            <tr>
               <td style="border: 1px solid #ddd; padding: 10px; text-align: left;">Hypertension (0/1)</td>
               <td style="border: 1px solid #ddd; padding: 10px; background-color: #f9f9f9;">
                  <input type="text" name="hypertension" style="width: 100%; padding: 8px; box-sizing: border-box;">
               </td>
            </tr>
            <tr>
               <td style="border: 1px solid #ddd; padding: 10px; text-align: left;">Heart disease (0/1)</td>
               <td style="border: 1px solid #ddd; padding: 10px; background-color: #f9f9f9;">
                  <input type="text" name="heartdisease" style="width: 100%; padding: 8px; box-sizing: border-box;">
               </td>
            </tr>
            <tr>
               <td style="border: 1px solid #ddd; padding: 10px; text-align: left;">Smoking history (1-never, 2-No Info, 3-current, 4-former, 5-ever, 6-not current)</td>
               <td style="border: 1px solid #ddd; padding: 10px; background-color: #f9f9f9;">
                  <input type="text" name="smokinghistory" style="width: 100%; padding: 8px; box-sizing: border-box;">
               </td>
            </tr>
            <tr>
               <td style="border: 1px solid #ddd; padding: 10px; text-align: left;">BMI (10-95)</td>
               <td style="border: 1px solid #ddd; padding: 10px; background-color: #f9f9f9;">
                  <input type="text" name="bmi" style="width: 100%; padding: 8px; box-sizing: border-box;">
               </td>
            </tr>
            <tr>
               <td style="border: 1px solid #ddd; padding: 10px; text-align: left;">HbA1c level (3.5-9.0)</td>
               <td style="border: 1px solid #ddd; padding: 10px; background-color: #f9f9f9;">
                  <input type="text" name="HbA1clevel" style="width: 100%; padding: 8px; box-sizing: border-box;">
               </td>
            </tr>
            <tr>
               <td style="border: 1px solid #ddd; padding: 10px; text-align: left;">Blood glucose level (80-300)</td>
               <td style="border: 1px solid #ddd; padding: 10px; background-color: #f9f9f9;">
                  <input type="text" name="bloodglucoselevel" style="width: 100%; padding: 8px; box-sizing: border-box;">
               </td>
            </tr>
            <tr>
               <td colspan="2" align="center" style="border: 1px solid #ddd; padding: 10px;">
                  <input type="submit" value="Predict Diabetes" style="background-color: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; text-align: center;">
               </td>
            </tr>
         </table>
      </form>
      {{ result }}
   </body>
</html>

------------------------------------------------------------------------------------------------------
STEP2) Create the app.py  for the connect to server and predict the result

from flask import * 
import pandas as pd 
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import LogisticRegression

app = Flask(__name__) 

url = "https://raw.githubusercontent.comlAkshat81172/diabetes.csv"
df = pd.read_csv(url)
df.gender.unique()
df.gender.replace(['Male','Female','Other'],[1,2,3],inplace=True)
df.smoking_history.unique()
df.smoking_history.replace(['never', 'No Info', 'current', 'former', 'ever', 'not current'],[1,2,3,4,5,6],inplace=True)


X = df[['gender',	'age'	,'hypertension'	,'heart_disease',	'smoking_history'	,'bmi'	,'HbA1c_level',	'blood_glucose_level'	]]
Y = df['diabetes']
 
dmodel = LinearRegression( )
dmodel.fit(X, Y)
res = dmodel.predict([[1,	67.0,	0,	0,	3,	19	,6.6,	100	]])
op = str( round(res[0]*100 ,2)) + "%"


@app.route('/')
def dproject(): 
   return render_template("index.html" )  
@app.route("/dpredict", methods=['POST'])
def dpredict():
  gender         = int(request.form["gender"])
  age            = int(request.form["age"])
  hypertension   = int(request.form["hypertension"])
  heartdisease   = int(request.form["heartdisease"])
  smokinghistory = int(request.form["smokinghistory"])
  bmi            = int(request.form["bmi"])
  HbA1clevel     = int(request.form["HbA1clevel"])
  bloodglucoselevel = int(request.form["bloodglucoselevel"])
  
  
  res = dmodel.predict([[ gender, age,hypertension,heartdisease,smokinghistory,bmi,HbA1clevel,bloodglucoselevel ]])
  op =  "   Result Prediction: " + str( round(res[0]*100 ,2)) + "%"
 
  return render_template("index.html", result=op)          
  
if __name__ == '__main__': 
  app.run()
 
-------------------------------------------------------------------------------------------------------------------
STEP3)  Create file requirements.txt
flask
pandas
scikit-learn

------------------------------------------------------------------------------------------------------------
STEP4) Create the start.sh

python app.py



Then excute the file









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  











































































































































































































